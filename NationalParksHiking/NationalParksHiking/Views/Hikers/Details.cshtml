@model NationalParksHiking.Models.Hiker

@{
    ViewBag.Title = "Details";
}

    <div class="container-fluid body-content">

        <h2>@Html.DisplayFor(model => model.FirstName) Details</h2>
        <hr />

        @*@{
            // Create an empty list for the marker values to add into
            List<NationalParksHiking.Models.HikerParkViewModel> wishlistItems = new List<NationalParksHiking.Models.HikerParkViewModel>();
        }
        @foreach (var item in Model.HikerParkWishlist.Park.ParkName)
        {
            // Add Markers
            NationalParksHiking.Models.HikerParkViewModel wishlistItem = new NationalParksHiking.Models.HikerParkViewModel();
            //Assign required parameters
            wishlistItem.HikerParkWishlist = wishlistItem.HikerParkWishlist;
            //Actually add all three values together into the parkMarker object
            wishlistItems.Add(wishlistItem);
        }*@
        <div class="flex-container">
            <div class="flex-box">
                <dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(model => model.FirstName)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.FirstName)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.LastName)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.LastName)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.StreetAddress)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.StreetAddress)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.City)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.City)
                    </dd>

                    <dt>
                        @Html.DisplayNameFor(model => model.State)
                    </dt>

                    <dd>
                        @Html.DisplayFor(model => model.State)
                    </dd>

                    @Html.HiddenFor(model => model.Longitude)
                    @Html.HiddenFor(model => model.Longitude)
                </dl>
            </div>
            @if (Model.hikerParkWishlists != null)
            {
        <div class="flex-box">
            @foreach (var item in Model.hikerParkWishlists)
            {
                <p>@Html.DisplayFor(modelItem => item.ParkId)</p>
                <p>@Html.DisplayFor(modelItem => item.ParkName)</p>
            }
        </div>
            }
        </div>
        <p>
            @Html.ActionLink("Edit", "Edit", new { id = Model.HikerId }) |
            @Html.ActionLink("Delete", "Delete", new { id = Model.HikerId })
        </p>
    </div>
